{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Galarzaa's Memos","text":"<p>A collection of personal notes, memos and documentation that I use in my personal projects or when setting up my machines.</p>"},{"location":"badges/","title":"Badges","text":"<p>Just a collection of badges displaying status and stats from my personal projects, all in one place.</p>"},{"location":"badges/#github-galarzaa90","title":"GitHub: Galarzaa90","text":""},{"location":"badges/#tibiapy","title":"tibia.py","text":"<p>GitHub </p> <p>PyPi </p> <p>SonarCloud </p> <p>Docker </p>"},{"location":"badges/#tibiawiki-sql","title":"tibiawiki-sql","text":"<p>GitHub </p> <p>PyPi </p> <p>Docker </p>"},{"location":"badges/#tibiakt","title":"TibiaKT","text":"<p>GitHub </p> <p>Maven </p> <p>SonarCloud </p> <p>Docker </p>"},{"location":"setup/","title":"System Setup","text":"<p>A checklist of the apps I install or configurations I change when I set up a new Windows system.</p>"},{"location":"setup/#software","title":"Software","text":""},{"location":"setup/#general-use","title":"General Use","text":"<ul> <li> Google Chrome</li> <li> Microsoft 365</li> <li> ChatGPT</li> <li> Microsoft PowerToys</li> <li> WhatsApp</li> <li> Everything</li> <li> Notion</li> </ul>"},{"location":"setup/#development","title":"Development","text":"<ul> <li> git</li> <li> Visual Studio Code</li> <li> JetBrains ToolBox<ul> <li> PyCharm</li> <li> IntelliJ IDEA</li> </ul> </li> <li> Python</li> <li> Docker Desktop</li> <li> Node.js</li> <li> Build Tools for Visual Studio</li> <li> pgAdmin</li> <li> DB Browser for SQLite</li> <li> MongoDB Compass</li> <li> Redis Insight</li> </ul>"},{"location":"setup/#entertainment","title":"Entertainment","text":"<ul> <li> Steam</li> <li> NVIDIA App</li> <li> Discord</li> <li> Logitech G HUB</li> <li> Plex Server</li> <li> VLC</li> <li> Spotify</li> </ul>"},{"location":"setup/#other","title":"Other","text":"<ul> <li> Run Win11Debloat</li> <li>Set up <code>activenv</code> shortcut</li> </ul>"},{"location":"uses/","title":"Uses","text":""},{"location":"uses/#hardware","title":"Hardware","text":""},{"location":"uses/#personal-computer","title":"Personal Computer","text":"<ul> <li>Motherboard: MSI B450 Tomahawk Max II</li> <li>CPU: Ryzen 5 5600X</li> <li>GPU: MSI GeForce RTX 4070 12GB DDR5</li> <li>RAM: 2x16 GB DDR4 3200 MHz</li> <li>Storage:<ul> <li>ADATA Legend 960 NVMe 1TB SSD</li> <li>Western Digital 1TB HDD</li> <li>Seagate 2TB HDD</li> </ul> </li> <li>Mouse: Logitech G600</li> <li>Keyboard: HyperX Alloy Core</li> <li>Speakers: Logitech Z313</li> <li>Headphones: Logitech G733</li> <li>Displays:<ul> <li>LG 29WQ600 29\" 2560x1080 100Hz</li> <li>Dell P2419H 24\" 1920x1080 60Hz</li> </ul> </li> <li>OS: Windows 11</li> </ul>"},{"location":"uses/#software","title":"Software","text":""},{"location":"uses/#pycharm-professional","title":"PyCharm Professional","text":"<p>Favorite plugins:</p> <ul> <li>.ignore</li> <li>Color Highlighter</li> <li>Grep console</li> <li>GitToolBox</li> <li>Rainbow Brackets</li> <li>SonarLint</li> <li>Sourcery</li> <li>WakaTime</li> </ul>"},{"location":"uses/#intelij-idea-ultimate","title":"InteliJ IDEA Ultimate","text":"<p>Favorite plugins:</p> <ul> <li>.ignore</li> <li>Color Highlighter</li> <li>Grep console</li> <li>GitToolBox</li> <li>Kotest</li> <li>Rainbow Brackets</li> <li>SonarLint</li> <li>WakaTime</li> </ul>"},{"location":"uses/#vscode","title":"VSCode","text":"<p>Favorite extenions:</p> <ul> <li>Color Highlight</li> <li>GistPad</li> <li>gitignore</li> <li>GitLens</li> <li>Markdown All in One</li> <li>NGINX Configuration</li> <li>WakaTime</li> </ul>"},{"location":"dev/","title":"Development","text":"<p>Notes about development.</p>"},{"location":"dev/misc/","title":"DevOps","text":""},{"location":"dev/misc/#git-configuration-per-directory","title":"git configuration per directory","text":"<p>If you are handling multiple git repositories in the same machine, but you require separate credentials (e.g personal, work), you can define settings that are applied only to repositories in a subdirectory.</p> <p>In <code>.gitconfig</code>, add the <code>[includeIf]</code> block as shown below:</p> <pre><code>[user]\n    name = Galarzaa\n    email = allan@personal.com\n\n[includeIf \"gitdir:~/Galarza/git/work/\"]\n  path = .gitconfig-work\n</code></pre> <p>Create a new file, with the same name as in the path specified above:</p> <pre><code>[user]\n    email = allan@company.com\n</code></pre> <p>Now, whenever you create a commit in a repository inside the specified folder, your work email will be used (unless it has been overriden for the specific repository).</p>"},{"location":"dev/terminal/","title":"Terminal","text":""},{"location":"dev/terminal/#style-terminal","title":"Style Terminal","text":"<p>Colors the command line to make the start of one command easier to find.</p> <p>Add this to <code>.bashrc</code>:</p> <pre><code>export PS1=\"[\\[$(tput sgr0)\\]\\[\\033[38;5;9m\\]\\t\\[$(tput sgr0)\\]\\[\\033[38;5;15m\\]] \\[$(tput sgr0)\\]\\[\\033[38;5;10m\\]\\u@\\[$(tput sgr0)\\]\\[\\033[38;5;34m\\]\\h\\[$(tput sgr0)\\]\\[\\033[38;5;15m\\]:\\[$(tput sgr0)\\]\\[\\033[38;5;39m\\]\\w\\[$(tput sgr0)\\]\\[\\033[38;5;15m\\] \\[$(tput sgr0)\\]\\[\\033[38;5;13m\\]\\\\$\\[$(tput sgr0)\\]\"\n</code></pre> <p>Make sure that this line is uncommented:</p> <pre><code>force_color_prompt=yes\n</code></pre> <p>Preview</p> <p></p>"},{"location":"dev/terminal/#show-current-git-branch","title":"Show current git branch","text":"<p>Add this to <code>.bashrc</code>:</p> <pre><code>git_branch() {\n  git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/'\n}\n\nexport PS1=$PS1\"\\$(git_branch)\"\n</code></pre> <p>Preview</p> <p></p> <p>Any other customizations will be preserved.</p>"},{"location":"dev/terminal/#useful-aliases","title":"Useful aliases","text":"<p>Activate the venv in the current directory.</p> <pre><code>alias activenv=\"source venv/bin/activate\"\n</code></pre>"},{"location":"dev/terminal/#favorite-tools","title":"Favorite Tools","text":"Tool Description Installation bat A <code>cat</code> clone with syntax highlighting and Git integration. <code>apt install</code>"},{"location":"dev/windows/","title":"Windows","text":""},{"location":"dev/windows/#registry-edits","title":"Registry Edits","text":""},{"location":"dev/windows/#enabledisable-bing-search-on-start-menu","title":"Enable/disable Bing search on Start Menu","text":"DisableEnable <pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Explorer]\n\"DisableSearchBoxSuggestions\"=dword:00000000\n</code></pre> <pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Explorer]\n\"DisableSearchBoxSuggestions\"=dword:00000001\n</code></pre>"},{"location":"dev/windows/#powershell-shortcut-to-activate-venv-python","title":"Powershell shortcut to activate venv (Python)","text":"<p>Create an alias called <code>activenv</code> that runs the activate script relative to the current location:</p> <pre><code>New-Alias -Name activenv -Value .venv/scripts/activate.ps1\n</code></pre> <p>Export the alias to a script.</p> <pre><code>Export-Alias -Name activenv -Path \"activenv.ps1\" -As Script\n</code></pre> <p>Add script to startup:</p> <pre><code>Add-Content -Path $Profile -Value (Get-Content activenv.ps1)\n</code></pre>"},{"location":"projects/monitoring/","title":"Home PC Monitoring","text":"<p>This is a simple project that that uploads metriics from my PC and Rasberry PI to my Grafana account.</p>"},{"location":"projects/monitoring/#rasberry-pi-host","title":"Rasberry Pi Host","text":"<p>This will be the device that will collect the metrics of other devices in the network to upload them to Grafana.com.</p> <p>I use the following <code>docker-compose.yml</code> file:</p> <pre><code>version: \"3.8\"\n\nservices:\n  grafana-agent:\n    image: grafana/agent:v0.32.0\n    volumes:\n      - /tmp/agent:/etc/agent\n      - ./agent.yaml:/etc/agent-config/agent.yaml\n      - /var/log/:/var/log/\n    command: -config.file=/etc/agent-config/agent.yaml -config.expand-env\n    env_file:\n      - ./auth.env\n    restart: always\n\n  rpi-exporter:\n    image: carlosedp/arm_exporter\n    restart: always\n</code></pre> <p>Note</p> <p>At the moment of writing this, <code>0.32.0</code> was the latest Docker image version that was compatible with <code>armv7</code>.</p> <p>On that same directory, we need a <code>auth.env</code> file with the following:</p> <pre><code>PROMETHEUS_USER=12345678\nAPI_KEY=dGhpcyBpcyBub3QgYW4gYWN0dWFsIEFQSSBrZXk=\n</code></pre> <p>These values are all obtained from your account in Grafana.com.</p> <p>Additionally, we have the configuration file for the agent:</p> <pre><code>integrations:\n  node_exporter:\n    enabled: false\n  prometheus_remote_write:\n    - basic_auth:\n        password: ${API_KEY}\n        username: ${PROMETHEUS_USER}\n      url: https://prometheus-us-central1.grafana.net/api/prom/push\n\n\nmetrics:\n  configs:\n    - name: integrations\n      remote_write:\n        - basic_auth:\n            password: ${API_KEY}\n            username: ${PROMETHEUS_USER}\n          url: https://prometheus-us-central1.grafana.net/api/prom/push\n      scrape_configs:\n        - job_name: rpi-exporter\n          static_configs:\n            - targets:\n              - rpi-exporter:9243\n        - job_name: &lt;job-name-for-pc-job&gt;\n          static_configs:\n            - targets:\n              - 192.168.1.1:4445 # OhmGraphite\n              - 192.168.1.1:9182 # windows_exporter\n</code></pre>"},{"location":"projects/monitoring/#windows-devices","title":"Windows Devices","text":"<p>On Windows devices, I use two tools:</p>"},{"location":"projects/monitoring/#ohmgraphite","title":"OhmGraphite","text":"<p>This collects hardware sensor data, such as CPU and GPU temperatures. I use it in Prometheus mode</p>"},{"location":"projects/monitoring/#windows_exporter","title":"windows_exporter","text":"<p>Collects general information from Windows machine, similar to node_exporter.</p>"},{"location":"projects/monitoring/#raspberry-pi-devices","title":"Raspberry Pi Devices","text":"<p>Configuration for additional Raspberry PI devices coming soon.</p>"},{"location":"projects/monitoring/#grafana-dashboards","title":"Grafana Dashboards","text":""}]}